{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "67ace648-3972-4cd2-922e-e84b3930c8d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "user_id: category\n",
      "1840e0b9d4: Продукты\n",
      "4e4f90fcfb: Электроника\n",
      "afea8d72fc: Электроника\n",
      "373a6055fe: Бытовая техника\n",
      "9b2ab046f3: Электроника\n",
      "9f39d307c3: Электроника\n",
      "44edeffc91: Продукты\n",
      "704474fa2d: Продукты\n",
      "1de31be403: Бытовая техника\n"
     ]
    }
   ],
   "source": [
    "import json\n",
    "\n",
    "file_path = '/Users/alekseykhromov/Library/Mobile Documents/com~apple~CloudDocs/My Cloud/Универ ВШЭ/Программирование Phyton/4_работа с файлами/purchase_log.txt'\n",
    "\n",
    "purchases = {}\n",
    "\n",
    "try:\n",
    "    with open(file_path, 'r', encoding='utf-8') as file:\n",
    "        for line in file:\n",
    "            line = line.strip() # Убираем лишние пробелы и символы переноса строки\n",
    "            if not line:\n",
    "                continue # Пропускаем пустые строки\n",
    "\n",
    "            try:\n",
    "                # Парсим строку как JSON\n",
    "                data = json.loads(line)\n",
    "                if 'user_id' in data and 'category' in data:\n",
    "                    purchases[data['user_id']] = data['category']\n",
    "            except json.JSONDecodeError:\n",
    "                continue\n",
    "except FileNotFoundError:\n",
    "    print(f\"Файла по пути {file_path} не найден.\")\n",
    "except Exception as e:\n",
    "    print(f\"Произошла ошибка: {e}\")\n",
    "\n",
    "# Выводим первые 10 записей для проверки\n",
    "for user_id, category in list(purchases.items())[:10]:\n",
    "    print(f\"{user_id}: {category}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d5b17958-69d9-4939-bd5d-cd50de64ea72",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Файл funnel.csv успешно создан по пути: /Users/alekseykhromov/Library/Mobile Documents/com~apple~CloudDocs/My Cloud/Универ ВШЭ/Программирование Phyton/4_работа с файлами/funnel.csv\n"
     ]
    }
   ],
   "source": [
    "import json\n",
    "\n",
    "# Пути к файлам\n",
    "purchase_log_path = '/Users/alekseykhromov/Library/Mobile Documents/com~apple~CloudDocs/My Cloud/Универ ВШЭ/Программирование Phyton/4_работа с файлами/purchase_log.txt'\n",
    "visit_log_path = '/Users/alekseykhromov/Library/Mobile Documents/com~apple~CloudDocs/My Cloud/Универ ВШЭ/Программирование Phyton/4_работа с файлами/visit_log.csv'\n",
    "output_path = '/Users/alekseykhromov/Library/Mobile Documents/com~apple~CloudDocs/My Cloud/Универ ВШЭ/Программирование Phyton/4_работа с файлами/funnel.csv'\n",
    "\n",
    "# Обрабатываем visit_log.csv построчно и записываем в funnel.csv\n",
    "try:\n",
    "    with open(visit_log_path, 'r', encoding='utf-8') as visit_file, \\\n",
    "         open(output_path, 'w', encoding='utf-8') as funnel_file:\n",
    "        # Записываем заголовок в файл funnel.csv\n",
    "        funnel_file.write(\"user_id,source,category\\n\")\n",
    "        \n",
    "        for line in visit_file:\n",
    "            line = line.strip()\n",
    "            if not line:\n",
    "                continue\n",
    "\n",
    "            # Разбиваем строку на части\n",
    "            user_id, source = line.split(',')[:2]\n",
    "            \n",
    "            # Если user_id есть в словаре purchases, записываем в файл\n",
    "            if user_id in purchases:\n",
    "                category = purchases[user_id]\n",
    "                funnel_file.write(f\"{user_id},{source},{category}\\n\")\n",
    "except FileNotFoundError as e:\n",
    "    print(f\"Файл не найден: {e.filename}\")\n",
    "except Exception as e:\n",
    "    print(f\"Произошла ошибка: {e}\")\n",
    "\n",
    "print(f\"Файл funnel.csv успешно создан по пути: {output_path}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "18e91639-da48-45ee-92ef-9be492ca475b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
