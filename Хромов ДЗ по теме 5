{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "67ace648-3972-4cd2-922e-e84b3930c8d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Moscow Times: 2002-10-02 00:00:00\n",
      "The Guardian: 2013-10-11 00:00:00\n",
      "Daily News: 1977-08-18 00:00:00\n"
     ]
    }
   ],
   "source": [
    "from datetime import datetime\n",
    "\n",
    "# Форматы дат газеты\n",
    "dates = {\n",
    "    \"The Moscow Times\": \"Wednesday, October 2, 2002\",\n",
    "    \"The Guardian\": \"Friday, 11.10.13\",\n",
    "    \"Daily News\": \"Thursday, 18 August 1977\",\n",
    "}\n",
    "\n",
    "# Форматы для каждой даты\n",
    "formats = {\n",
    "    \"The Moscow Times\": \"%A, %B %d, %Y\",\n",
    "    \"The Guardian\": \"%A, %d.%m.%y\",\n",
    "    \"Daily News\": \"%A, %d %B %Y\",\n",
    "}\n",
    "\n",
    "# Преобразуем строки в объекты datetime\n",
    "for newspaper, date_str in dates.items():\n",
    "    try:\n",
    "        date_obj = datetime.strptime(date_str, formats[newspaper])\n",
    "        print(f\"{newspaper}: {date_obj}\")\n",
    "    except ValueError as e:\n",
    "        print(f\"Ошибка обработки даты для {newspaper}: {e}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c1558c54-048b-4bc4-b4ab-2a936a4d74ed",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2022-01-01', '2022-01-02', '2022-01-03']\n",
      "[]\n",
      "[]\n"
     ]
    }
   ],
   "source": [
    "from datetime import datetime, timedelta\n",
    "\n",
    "def date_range(start_date, end_date):\n",
    "    try:\n",
    "        # Преобразуем строки в объекты datetime\n",
    "        start = datetime.strptime(start_date, '%Y-%m-%d')\n",
    "        end = datetime.strptime(end_date, '%Y-%m-%d')\n",
    "        \n",
    "        if start > end:\n",
    "            return []\n",
    "        \n",
    "        # Генерируем список дат\n",
    "        date_list = []\n",
    "        current_date = start\n",
    "        while current_date <= end:\n",
    "            date_list.append(current_date.strftime('%Y-%m-%d'))\n",
    "            current_date += timedelta(days=1)\n",
    "        \n",
    "        return date_list\n",
    "    except ValueError:\n",
    "        # Возвращаем пустой список при ошибке формата даты\n",
    "        return []\n",
    "\n",
    "# Примеры работы\n",
    "print(date_range('2022-01-01', '2022-01-03'))\n",
    "print(date_range('2022-01-03', '2022-01-01'))\n",
    "print(date_range('invalid_date', '2022-01-03'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c89c495-f46f-4a46-94a4-54309e6e9779",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
